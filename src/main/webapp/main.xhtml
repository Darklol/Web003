<?xml version="1.0" encoding="UTF-8"?>
<!--
  Created by IntelliJ IDEA.
  User: TheHs
  Date: 2020/11/20
  Time: 16:55
-->
<!DOCTYPE html
        PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:a="http://xmlns.jcp.org/jsf/passthrough"
      xmlns:f="http://java.sun.com/jsf/core">
<h:body>
    <ui:composition template="templates/layout.xhtml"> <!-- Only something in this tag will be showed! -->

        <ui:define name="title">Welcome!</ui:define>

        <ui:define name="header">
            <ui:include src="templates/header.xhtml"/>
        </ui:define>

        <ui:define name="content">
            <f:event type="preRenderView" listener="#{pointsBean.init}"/> <!--What' this-->
            <h:form>

                <div class="x-value">   <!-- We can change "x-text" to change words' style -->
                    <div class="h5">X value:</div>
                    <h:commandLink id="x-3" name="x-commandLink" value="-3" action="#{pointsBean.setX(-3)}">
                        <h:outputText value="-3" styleClass="x-text" for="x-3"></h:outputText>
                    </h:commandLink>
                    <h:commandLink id="x-2" name="x-commandLink" value="-2" action="#{pointsBean.setX(-2)}">
                        <h:outputText value="-2" styleClass="x-text" for="x-3"></h:outputText>
                    </h:commandLink>
                    <h:commandLink id="x-1" name="x-commandLink" value="-1" action="#{pointsBean.setX(-1)}">
                        <h:outputText value="-1" styleClass="x-text" for="x-3"></h:outputText>
                    </h:commandLink>
                    <h:commandLink id="x0" name="x-commandLink" value="0" action="#{pointsBean.setX(0)}">
                        <h:outputText value="0" styleClass="x-text" for="x-3"></h:outputText>
                    </h:commandLink>
                    <h:commandLink id="x1" name="x-commandLink" value="1" action="#{pointsBean.setX(1)}">
                        <h:outputText value="1" styleClass="x-text" for="x-3"></h:outputText>
                    </h:commandLink>
                    <h:commandLink id="x2" name="x-commandLink" value="2" action="#{pointsBean.setX(2)}">
                        <h:outputText value="2" styleClass="x-text" for="x-3"></h:outputText>
                    </h:commandLink>
                    <h:commandLink id="x3" name="x-commandLink" value="3" action="#{pointsBean.setX(3)}">
                        <h:outputText value="3" styleClass="x-text" for="x-3"></h:outputText>
                    </h:commandLink>
                    <h:commandLink id="x4" name="x-commandLink" value="4" action="#{pointsBean.setX(4)}">
                        <h:outputText value="4" styleClass="x-text" for="x-3"></h:outputText>
                    </h:commandLink>
                    <h:commandLink id="x5" name="x-commandLink" value="5" action="#{pointsBean.setX(5)}">
                        <h:outputText value="5" styleClass="x-text" for="x-3"></h:outputText>
                    </h:commandLink>

                    <div class="invalid-x d-none h5" style="color: red">
                        Please choose x.
                    </div>
                </div>

                <div class="y-value">
                    <div class="h5">Y value:</div>
                    <h:inputText id="y" name="y-text" a:placeholder="Value in [-5..5]"
                                 converterMessage="Y must be number..."
                                 styleClass="y" value="#{pointsBean.y}"
                                 validatorMessage="Y must be number between -3 and 3. If you want more, please lick the svg"
                                 required="true" requiredMessage="Y is required" maxlength="17">
                        <f:validateDoubleRange minimum="-5" maximum="5"/>
                    </h:inputText>
                    <h:message for="y" style="color: red"/>
                    <div class="invalid-y d-none h5" style="color: red">
                        Y must be number...
                    </div>
                </div>

                <!--We don't need to set "selected" attribute. Rendered output will set it on the first option-->
                <div class="r-value">
                    <div class="h5">R value:</div>
                    <h:selectOneRadio value="#{pointsBean.r}">
                        <f:selectItem itemValue="1" itemLabel="1" styleClass="r-text"/>
                        <f:selectItem itemValue="1.5" itemLabel="1.5" styleClass="r-text"/>
                        <f:selectItem itemValue="2" itemLabel="2" styleClass="r-text"/>
                        <f:selectItem itemValue="2.5" itemLabel="2.5" styleClass="r-text"/>
                        <f:selectItem itemValue="3" itemLabel="3" styleClass="r-text"/>
                    </h:selectOneRadio>
                </div>

                <div class="control-buttons mt-3 row">

                    <div class="my-3 col-sm">
                        <h:commandButton styleClass="btn btn-primary btn-lg submit-btn" value="Submit"
                                         type="submit"
                                         action="#{pointsBean.addPointFromFields}">
                        </h:commandButton>
                    </div>

                    <div class="my-3 col-sm">
                        <h:commandButton styleClass="btn btn-primary btn-lg clear-form-btn"
                                         value="Clear form"
                                         type="button"/>
                    </div>

                    <div class="my-3 col-sm">
                        <h:commandButton styleClass="btn btn-primary btn-lg clear-table-btn"
                                         value="Clear table"
                                         type="button"
                                         action="#{pointsBean.clearTable}">
                            <f:ajax render="results-table"/>
                        </h:commandButton>
                    </div>
                </div>
            </h:form>

            <!--Hidden form is for clicking svg-->
            <h:form styleClass="d-none hidden-form">
                <h:inputText styleClass="x-hidden" value="#{pointsBean.hidden_x}"/>
                <h:inputText styleClass="y-hidden" value="#{pointsBean.hidden_y}"/>
                <h:inputText styleClass="r-hidden" value="#{pointsBean.hidden_r}"/>
                <h:commandButton type="submit" styleClass="hidden-submit-btn"
                                 action="#{pointsBean.addPointFromHiddenForm}"/>
            </h:form>

            <div class="graphic">
                <ui:include src="templates/graphics.html"></ui:include>
            </div>

            <div class="table-view">
                <div class="h4">Results</div>
                <h:dataTable styleClass="table-view" value="#{pointsBean.allPoints}" var="point" id="results-table">

                    <h:column>
                        <f:facet name="header">X</f:facet>
                        #{point.x}
                    </h:column>

                    <h:column>
                        <f:facet name="header">Y</f:facet>
                        #{point.y}
                    </h:column>

                    <h:column>
                        <f:facet name="header">R</f:facet>
                        #{point.r}
                    </h:column>

                    <h:column>
                        <f:facet name="header">Current time</f:facet>
                        #{point.queryTime}
                    </h:column>

                    <h:column>
                        <f:facet name="header">Result</f:facet>
                        #{point.inArea}
                    </h:column>
                </h:dataTable>
            </div>

            <div class="link-button">
                <h:link outcome="index">Start page</h:link>
            </div>
        </ui:define>

        <ui:define name="scripts">
            <h:outputScript library="js" name="graphics.js"/>
            <h:outputScript library="js" name="main.js"/>
        </ui:define>

    </ui:composition>
</h:body>

</html>